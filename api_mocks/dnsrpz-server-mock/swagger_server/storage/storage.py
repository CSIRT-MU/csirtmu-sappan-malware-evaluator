import json
class Storage:

    zones = { "white" : "/usr/src/app/data/whitelist.json", "black" : "/usr/src/app/data/blacklist.json"}

    def get_zone(self, zone):
        domains = [] 
        data = ""
        with open(self.zones[zone], "r") as db:
            try:
                data = json.load(db)
            except:
                print("Can't open the damn file")
                return {"error": { "retval" : 1, "mesg" : "Could not open file" }, "result": []}
        for record in data.values():
            domains.append(record)
        return {"error": { "retval" : 0, "mesg" : "ok" }, "result": domains}


    def add_to_zone(self, zone, domain, listed, target, entry, reason):
        data = {}
        with open(self.zones[zone], "r") as db:
            try:
                data = json.load(db)
            except:
                pass
        if (not domain in data):
            data[str(domain)] = domain + " IN " + entry + " " + target + " ;" + reason + " ;" + listed
        with open(self.zones[zone], "w") as db:
            json.dump(data, db)
    
    def remove_from_zone(self, zone, domain, target, entry, reason):
        data = {}
        with open(self.zones[zone], "r") as db:
            try:
                data = json.load(db)
            except:
                return
        if (domain in data):
            data.pop(str(domain))
            with open(self.zones[zone], "w") as db:
                json.dump(data, db)
                        
        
    

  