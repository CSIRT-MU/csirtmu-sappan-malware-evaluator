# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class IPAddRecord(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, ip: str=None, length: int=None, reason: str=None):  # noqa: E501
        """IPAddRecord - a model defined in Swagger

        :param ip: The ip of this IPAddRecord.  # noqa: E501
        :type ip: str
        :param length: The length of this IPAddRecord.  # noqa: E501
        :type length: int
        :param reason: The reason of this IPAddRecord.  # noqa: E501
        :type reason: str
        """
        self.swagger_types = {
            'ip': str,
            'length': int,
            'reason': str
        }

        self.attribute_map = {
            'ip': 'ip',
            'length': 'length',
            'reason': 'reason'
        }

        self._ip = ip
        self._length = length
        self._reason = reason

    @classmethod
    def from_dict(cls, dikt) -> 'IPAddRecord':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The IP_AddRecord of this IPAddRecord.  # noqa: E501
        :rtype: IPAddRecord
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ip(self) -> str:
        """Gets the ip of this IPAddRecord.


        :return: The ip of this IPAddRecord.
        :rtype: str
        """
        return self._ip

    @ip.setter
    def ip(self, ip: str):
        """Sets the ip of this IPAddRecord.


        :param ip: The ip of this IPAddRecord.
        :type ip: str
        """

        self._ip = ip

    @property
    def length(self) -> int:
        """Gets the length of this IPAddRecord.


        :return: The length of this IPAddRecord.
        :rtype: int
        """
        return self._length

    @length.setter
    def length(self, length: int):
        """Sets the length of this IPAddRecord.


        :param length: The length of this IPAddRecord.
        :type length: int
        """

        self._length = length

    @property
    def reason(self) -> str:
        """Gets the reason of this IPAddRecord.


        :return: The reason of this IPAddRecord.
        :rtype: str
        """
        return self._reason

    @reason.setter
    def reason(self, reason: str):
        """Sets the reason of this IPAddRecord.


        :param reason: The reason of this IPAddRecord.
        :type reason: str
        """

        self._reason = reason
