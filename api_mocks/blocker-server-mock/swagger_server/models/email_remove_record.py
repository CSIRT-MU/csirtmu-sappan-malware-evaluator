# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class EmailRemoveRecord(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, email: str=None, reason: str=None, who: str=None):  # noqa: E501
        """EmailRemoveRecord - a model defined in Swagger

        :param email: The email of this EmailRemoveRecord.  # noqa: E501
        :type email: str
        :param reason: The reason of this EmailRemoveRecord.  # noqa: E501
        :type reason: str
        :param who: The who of this EmailRemoveRecord.  # noqa: E501
        :type who: str
        """
        self.swagger_types = {
            'email': str,
            'reason': str,
            'who': str
        }

        self.attribute_map = {
            'email': 'email',
            'reason': 'reason',
            'who': 'who'
        }

        self._email = email
        self._reason = reason
        self._who = who

    @classmethod
    def from_dict(cls, dikt) -> 'EmailRemoveRecord':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Email_RemoveRecord of this EmailRemoveRecord.  # noqa: E501
        :rtype: EmailRemoveRecord
        """
        return util.deserialize_model(dikt, cls)

    @property
    def email(self) -> str:
        """Gets the email of this EmailRemoveRecord.


        :return: The email of this EmailRemoveRecord.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email: str):
        """Sets the email of this EmailRemoveRecord.


        :param email: The email of this EmailRemoveRecord.
        :type email: str
        """

        self._email = email

    @property
    def reason(self) -> str:
        """Gets the reason of this EmailRemoveRecord.


        :return: The reason of this EmailRemoveRecord.
        :rtype: str
        """
        return self._reason

    @reason.setter
    def reason(self, reason: str):
        """Sets the reason of this EmailRemoveRecord.


        :param reason: The reason of this EmailRemoveRecord.
        :type reason: str
        """

        self._reason = reason

    @property
    def who(self) -> str:
        """Gets the who of this EmailRemoveRecord.


        :return: The who of this EmailRemoveRecord.
        :rtype: str
        """
        return self._who

    @who.setter
    def who(self, who: str):
        """Sets the who of this EmailRemoveRecord.


        :param who: The who of this EmailRemoveRecord.
        :type who: str
        """

        self._who = who
