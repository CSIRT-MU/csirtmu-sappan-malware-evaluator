from typing import TypeVar

from csirtmu.observable_evaluator.analyser.abstract_analysers import AbstractFileAnalyser
from csirtmu.observable_evaluator.analyser.analysis_result import FileAnalysis

from csirtmu.observable_evaluator.analyser.abstract_analysers import AbstractObservableAnalyser
from csirtmu.observable_evaluator.analyser.analysis_result import ObservableAnalysis


T = TypeVar("T", AbstractFileAnalyser)


class FileAnalyser(T):
    def __init__(self, analyser: T):
        self.analyser = analyser

    def analyze(self, report, **kwargs) -> FileAnalysis:
        return self.analyser.analyse(report, **kwargs)


S = TypeVar("S", AbstractObservableAnalyser)


class ObservableAnalyser(S):
    def __init__(self, analyser: S):
        self.analyser = analyser

    def analyze(self, report, **kwargs) -> ObservableAnalysis:
        return self.analyser.analyse(report, **kwargs)
