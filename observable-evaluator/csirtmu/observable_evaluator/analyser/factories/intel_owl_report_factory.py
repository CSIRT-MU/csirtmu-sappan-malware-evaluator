from typing import Dict

from csirtmu.observable_evaluator.analyser.intel_owl_report import IntelOwlReport

from csirtmu.observable_evaluator.analyser.modules.otx_alien_vault import OTXAlienVaultReport
from csirtmu.observable_evaluator.analyser.modules.virustotal import VirusTotalFileReport, VirusTotalObservableReport
from csirtmu.observable_evaluator.analyser.modules.hybrid_analysis import HybridAnalysisFileReport, HybridAnalysisObservableReport
from csirtmu.observable_evaluator.analyser.modules.google_safebrowsing import GoogleSafebrowsingReport
from csirtmu.observable_evaluator.analyser.modules.cloudflare import CloudflareReport
from csirtmu.observable_evaluator.analyser.modules.file_info import FileInfoReport
from csirtmu.observable_evaluator.analyser.modules.misp import MISPReport


class IntelOwlReportFactory:
    mapping = {
        "VirusTotal_v3_Get_File_And_Scan": VirusTotalFileReport,
        "VirusTotal_v3_Get_Observable": VirusTotalObservableReport,
        "HybridAnalysis_Get_File": HybridAnalysisFileReport,
        "HybridAnalysis_Get_Observable": HybridAnalysisObservableReport,
        "OTX_Check_Hash": OTXAlienVaultReport,
        "OTXQuery": OTXAlienVaultReport,
        "GoogleSafebrowsing": GoogleSafebrowsingReport,
        "CloudFlare_Malicious_Detector": CloudflareReport,
        "File_Info": FileInfoReport,
        "MISP": MISPReport,
        "MISP_Check_Hash": MISPReport,
    }

    @classmethod
    def get_report(cls, analysis_report: Dict):
        tool_report = cls.mapping[analysis_report['name']]
        report = IntelOwlReport[tool_report].from_data(
            tool_report, analysis_report)
        return report
