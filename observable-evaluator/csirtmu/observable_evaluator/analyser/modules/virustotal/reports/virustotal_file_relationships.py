from dataclasses import dataclass, field
from dataclasses_json import dataclass_json
from dataclasses_json.undefined import Undefined
from typing import Dict, Any


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclass
class VirusTotalFileRelationships:

    @dataclass
    class ContactedIP:
        id: str
        type: str

        def __post_init__(self):
            self.value = self.id

    @dataclass
    class ContactedURL:
        id: str
        type: str
        context_attributes: Dict[str, str]

        def __post_init__(self):
            self.value = self.context_attributes['url']

    @dataclass
    class ContactedDomain:
        id: str
        type: str

        def __post_init__(self):
            self.value = self.id

    contacted_ips: Any = field(default_factory={'data': {}})
    contacted_urls: Any = field(default_factory={'data': {}})
    contacted_domains: Any = field(default_factory={'data': {}})

    def __post_init__(self):
        self.contacted_ips = [self.ContactedIP(
            **data) for data in self.contacted_ips['data']]
        self.contacted_domains = [self.ContactedDomain(
            **data) for data in self.contacted_domains['data']]
        self.contacted_urls = [self.ContactedURL(
            **data) for data in self.contacted_urls['data']]
