from dataclasses import dataclass, field
from dataclasses_json import dataclass_json
from typing import List, Dict, Optional
from csirtmu.observable_evaluator.analyser.intel_owl_report import IntelOwlReport


@dataclass_json
@dataclass
class Analysis():
    malicious: bool = False
    malicious_info: str = "No"
    score: int = 0
    detected: List[str] = field(default_factory=lambda: [])
    raw: Optional[IntelOwlReport] = None
    reports: Optional[Dict[str, "Analysis"]] = field(
        default_factory=lambda: {})
    tagged_as_malicious: Optional[List[str]] = field(
        default_factory=lambda: [])
    tagged_as_harmless: Optional[List[str]] = field(default_factory=lambda: [])
    errors: List = field(default_factory=lambda: [])


@dataclass_json
@dataclass
class ObservableAnalysis(Analysis):
    observable: str = "unknown"
    observable_type: str = " unknown"


@dataclass_json
@dataclass
class FileAnalysis(Analysis):
    filename: str = "unknown"
    observables: Optional[Dict[str, ObservableAnalysis]] = field(
        default_factory=lambda: {})
    aliases: Optional[List[str]] = field(default_factory=lambda: [])
    file_info: Optional[Dict[str, str]] = field(default_factory=lambda: {})
