
#############################################################
################# Required wheels building ##################
#############################################################

FROM python:3.8.7-slim as requirements_stage

RUN apt-get update && apt-get install --no-install-recommends -y \
    build-essential \
    python3-wheel \
    git \
    gnupg2 \
    curl

# Install setuptools and wheel
RUN pip3 install setuptools wheel gitpython poetry 

#RUN  rm -rf /var/lib/apt/lists/*
WORKDIR /opt/airflow-wheels
COPY wheels ./wheels

# Export poetry requirements
COPY poetry.lock .
COPY pyproject.toml .
RUN poetry export --without-hashes -f requirements.txt --output requirements.txt 

# Build wheels from requirements
RUN pip3 wheel -r requirements.txt -w wheels

#############################################################
################# Custom base airflow image #################
#############################################################

FROM apache/airflow:2.0.1-python3.8

# Env variables for airflow
ARG AIRFLOW_HOME="/opt/airflow"
ENV AIRFLOW_HOME ${AIRFLOW_HOME}

USER root

# install weasyprint prerequisites
RUN apt-get update && apt-get install --no-install-recommends -y \
    libxml2-dev \
    libxslt-dev \
    libffi-dev \
    libcairo2-dev \
    libpango1.0-dev


# Install built wheels
COPY --from=requirements_stage /opt/airflow-wheels/requirements.txt /opt/airflow-wheels/requirements.txt
COPY --from=requirements_stage /opt/airflow-wheels/wheels /opt/airflow-wheels/wheels
RUN pip install --no-cache-dir --no-index --find-links=/opt/airflow-wheels/wheels/ -r /opt/airflow-wheels/requirements.txt
WORKDIR ${AIRFLOW_HOME}

# Image cleanup for smaller container size
RUN apt-get autoremove -yqq --purge \
    && apt-get clean \
    && rm -rf \
    /var/lib/apt/lists/* \
    /tmp/* \
    /var/tmp/* \
    /usr/share/man \
    /usr/share/doc \
    /usr/share/doc-base

# End rest as airflow user
COPY wait-for-database.sh ${AIRFLOW_HOME}/wait-for-database.sh
COPY airflow-entrypoint.sh ${AIRFLOW_HOME}/airflow-entrypoint.sh
COPY import-airflow-connections-deployment.sh ${AIRFLOW_HOME}/import-airflow-connections.sh
RUN chmod +x ${AIRFLOW_HOME}/*.sh

USER airflow

