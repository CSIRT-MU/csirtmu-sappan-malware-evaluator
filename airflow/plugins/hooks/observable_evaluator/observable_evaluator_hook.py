from airflow.hooks.base_hook import BaseHook
import requests
from urllib.parse import unquote

class ObservableEvaluatorHook(BaseHook):
    def __init__(self, conn_id):
        self.client = None
        self.conn_id = conn_id

    def get_uri(self, conn):
        if conn.host and "://" in conn.host:
            base_url = conn.host
        else:
            schema = conn.schema if conn.schema else "http"
            host = conn.host if conn.host else ""
            base_url = schema + "://" + host

        if conn.port:
            base_url += ":" + str(conn.port)
        
        return base_url

    def get_conn(self):
        if (self.client is not None):
            return self.client
        conn = self.get_connection(self.conn_id)
        base_uri = self.get_uri(conn)
        self.client = {"base_url" : base_uri, "auth" : []}
        return self.client

    """
    files = {"file_name" : "file"}
    """
    def send_files_for_analysis(self, files, args = {}):
        client = self.get_conn()
        print(f"Client {client}")
        base_url = client["base_url"]
        print(f"Sending to {base_url}/analyse_files")
        return requests.post(f"{base_url}/analyse_files",files=files, data = args)

    """
    observables = {"observables" : ["observable1","observable2"]}
    """
    def send_observables_for_analysis(self, observables, args = {}):
        client = self.get_conn()
        if isinstance(observables, str):
            observables = [observables]
        base_url = client["base_url"]
        print(f"Sending to {base_url}/analyse_observables")
        attributes = {"observables" : observables}
        attributes.update(args)
        return requests.post(f"{base_url}/analyse_observables", json = attributes)
    